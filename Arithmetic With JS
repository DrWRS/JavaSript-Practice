/* Number is a data type in JavaScript which represents numeric data.
Now let's try to add two numbers using JavaScript.
JavaScript uses the + symbol as addition operation when placed between two numbers. */

var sum = 10 + 10;          // Simple addition = 20
var difference = 45 - 33;   // Simnple subtraction = 12
var product = 8 * 10;       // Simple multiplication = 80
var quotient = 66 / 33;     // Simple division = 2

/* You can easily increment or add one to a variable with the ++ operator.  
i++; is the equivalent of i = i + 1; 
Note - The entire line becomes i++;, eliminating the need for the equal sign. */

// Example of incrementation using the ++ operator removing the = sign
var myVar = 87;
myVar = myVar + 1;          // Instead of this use the next example
myVar++;                    // This will increment the myVar variable making it equal to 88

/* You can easily decrement or decrease a variable by one with the -- operator.
i--; is the equivalent of i = i - 1;
Note - The entire line becomes i--;, eliminating the need for the equal sign. */

// Example of decrementation using the -- operator removing the = sign
var myVar = 11;             
myVar = myVar - 1;           // Instead of this use the next example
myVar--;                     // This will decrease the myVar variable making it equal to 10

/* We can store decimal numbers in variables too. Decimal numbers are sometimes referred to as floating point numbers or floats.
Note - Not all real numbers can accurately be represented in floating point. This can lead to rounding errors. Details Here. */

var myDecimal = 4.20;         // Decimal/Floating point number

/* In JavaScript, you can also perform calculations with decimal numbers, just like whole numbers.
Let's multiply two decimals together to get their product. */

var product = 2.0 * 2.5;      // This will give the product of 5

/* Now let's divide one decimal by another. */

var quotient = 4.4 / 2.0;     // This quotient with equal 2.2

/* The remainder operator % gives the remainder of the division of two numbers. 
Usage - In mathematics, a number can be checked to be even or odd by checking the remainder of the division of the number by 2. 
17 % 2 = 1 (17 is Odd)
48 % 2 = 0 (48 is Even) 

Note - The remainder operator is sometimes incorrectly referred to as the 
"modulus" operator. It is very similar to modulus, but does not work properly with negative numbers. */

// Exammple of rainder operator % usage

var remainder;
remainder = 11 % 3;           // This will set remainder to 1

// End of Simple arithmetic, incrementation, and decrementation
