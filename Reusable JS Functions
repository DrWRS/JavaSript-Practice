/* Write Reusable JavaScript with Functions
In JavaScript, we can divide up our code into reusable parts called functions.

Here's an example of a function:

function functionName() {
  console.log("Hello World");
}
You can call or invoke this function by using its name followed by parentheses, like this:

functionName();

Each time the function is called it will print out the message "Hello World" on the dev console. 
All of the code between the curly braces will be executed every time the function is called. */

// Example
function ourReusableFunction() {
  console.log("Heyya, World");
}
ourReusableFunction();
----------------------------------------------------------------------
// Customized example
function reusableFunction() {
    console.log("Hello World");
    }
reusableFunction(); // Displays "Hello World"
----------------------------------------------------------------------
/* Passing Values to Functions with Arguments
Parameters are variables that act as placeholders for the values that are to be input to a function 
when it is called. When a function is defined, it is typically defined along with one or more parameters. 
The actual values that are input (or "passed") into a function when it is called are known as arguments.

Here is a function with two parameters, param1 and param2:

function testFun(param1, param2) {
  console.log(param1, param2);
}
testFun("Hello", "World"); */ // "Hello" and "World" can be replace by anything

// End Reusable JS Functions Commit
