/* Store Multiple Values in one Variable using JavaScript Arrays
With JavaScript array variables, we can store several pieces of data in one place.

You start an array declaration with an opening square bracket, end it with a closing 
square bracket, and put a comma between each entry, like this:  var sandwich = ["peanut butter", "jelly", "bread"]. */

// Example of an array containing string and numeric data

var myArray = ["Marijuana", 420];

/* Nest one Array within Another Array
You can also nest arrays within other arrays, like this: [["Bulls", 23], ["White Sox", 45]]. This is also called a 
Multi-dimensional Array. */

// Example 1
var ourArray = [["the universe", 42], ["everything", 101010]];

// Example 2
var myArray = [["Marijuana", 420], ["Poker", 415]];

/* Access Array Data with Indexes
We can access the data inside arrays using indexes.

Array indexes are written in the same bracket notation that strings use, except that instead of specifying a character, 
they are specifying an entry in the array. Like strings, arrays use zero-based indexing, so the first element in an array 
is element 0.

Example

var array = [50,60,70];
array[0]; // equals 50
var data = array[1]; // equals 60

Note - There shouldn't be any spaces between the array name and the square brackets, like array [0]. 
Although JavaScript is able to process this correctly, this may confuse other programmers reading your code. */

// Example
var myArray = [50,60,70];
//  Set the myData variable to equal the first myArray index value
var myData = myArray[0]; // equals 50

/* Modify Array Data With Indexes
Unlike strings, the entries of arrays are mutable and can be changed freely.

Example

var ourArray = [50,40,30];
ourArray[0] = 15; // equals [15,40,30] */

// End Arrays Commit
